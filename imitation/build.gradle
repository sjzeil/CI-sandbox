plugins {
   id 'java'
   id "org.xbib.gradle.plugin.git" version "2.0.0"
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter:5.7.0'
    testImplementation 'org.hamcrest:hamcrest-library:2.2'
}

test {
    ignoreFailures = true
    useJUnitPlatform()
}

task reports (dependsOn: ['javadoc', 'test']) {}

////////  Website publication on GitHub pages ///////////////////


def websiteRepo='git@github.com:sjzeil/pages-sandbox.git'

task clearPages(type: Delete) {
    delete 'build/gh-pages'
}

task clonePages(dependsOn: ['clearPages']) {
    it.outputs.dir('build/gh-pages')
    doLast {
        exec {
            workingDir = '.'
            commandLine = ['git', 'clone', websiteRepo, 'build/gh-pages']
        }
    }
}


task copyWebsite (dependsOn: ['reports', 'clonePages']) {
    it.inputs.dir('build/reports')
    it.inputs.dir('build/docs')
    it.inputs.dir('src/main/html')
    it.inputs.dir('build/gh-pages')
    doLast {
        ant.copy (todir: 'build/gh-pages') {
            fileset(dir: 'build/reports')
        }
        ant.copy (todir: 'build/gh-pages') {
            fileset(dir: 'build/docs')
        }
        ant.copy (todir: 'build/gh-pages') {
            fileset(dir: 'src/main/html')
        }
    }
}



task updateGHPages (dependsOn: 'copyWebsite') {
    group = "Reporting"
    description  'Copies reports to the gh-pages branch in preparation for a future push to GitHub'
    it.inputs.dir('build/gh-pages')
    doLast {
        def pagesDir = "$buildDir/gh-pages"
        exec {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'add', '.']
        }
        exec {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'commit', '-m', 'Updating-webpages']
        }
        exec {
            workingDir = 'build/gh-pages'
            commandLine = ['git', 'push']
        }
    }
}






task deployReports (dependsOn: 'updateGHPages') {
}
